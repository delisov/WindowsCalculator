<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CalcDmitriyElisov"
                    xmlns:views="clr-namespace:CalcDmitriyElisov.Views"
                    xmlns:animation="clr-namespace:CalcDmitriyElisov.Animations">
    <views:RelativePositionConverter x:Key="relativePositionConverter" />

    <Style TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#fbfafa" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverLight"
                                                         To="0" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fog"
                                                         To="0" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontWeight>Bold</FontWeight>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <animation:BrushAnimation Storyboard.TargetProperty="(TextElement.Foreground)" Storyboard.TargetName="contentPresenter"
                                                                  Duration="0:0:0.100" AutoReverse="False">
                                            <animation:BrushAnimation.To>
                                                <SolidColorBrush Color="#FFc2c2c2"/>
                                            </animation:BrushAnimation.To>
                                            <animation:BrushAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </animation:BrushAnimation.EasingFunction>
                                        </animation:BrushAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="border"
                                                         To="0" Duration="0:0:0.100" AutoReverse="False">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="backgroundBorder"
                                Opacity="0">
                            <Grid ClipToBounds="True">
                                <Border x:Name="hoverLight" Background="{views:RevealBrushExtension Color=White, Size = 200,Opacity=0.8}" />
                                <Rectangle x:Name="pressLight" Opacity="0">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush x:Name="fog" MappingMode="Absolute" RadiusY="5" RadiusX="5">
                                            <RadialGradientBrush.Center>
                                                <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.RootObject)"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.Center>
                                            <RadialGradientBrush.GradientOrigin>
                                                <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.RootObject)"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.GradientOrigin>
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="#88FFFFFF" Offset="0.5"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>

                        <!-- Content -->
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <!-- MouseOver border -->
                        <Border x:Name="border"
                                BorderBrush="{views:RevealBrush Color=Black,Size=60,Opacity=0.4}"
                                BorderThickness="1">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#cacaca"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#d9d5d5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBlueStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#fbfafa" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverLight"
                                                         To="1" Duration="0:0:0.100">
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="1" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fog"
                                                         To="0" BeginTime="0:0:0.500" Duration="0:0:4.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <animation:BrushAnimation Storyboard.TargetProperty="(TextElement.Foreground)" Storyboard.TargetName="contentPresenter"
                                                                  Duration="0:0:0.100" AutoReverse="False">
                                            <animation:BrushAnimation.To>
                                                <SolidColorBrush Color="#FF838383"/>
                                            </animation:BrushAnimation.To>
                                            <animation:BrushAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </animation:BrushAnimation.EasingFunction>
                                        </animation:BrushAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="border"
                                                         To="0" Duration="0:0:0.100" AutoReverse="False">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="backgroundBorder"
                                Opacity="0">
                            <Grid ClipToBounds="True">
                                <Border x:Name="hoverLight" Background="{views:RevealBrushExtension Color=White, Size = 200,Opacity=0}" />
                                <Rectangle x:Name="pressLight" Opacity="0">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush x:Name="fog" MappingMode="Absolute" RadiusY="5" RadiusX="5">
                                            <RadialGradientBrush.Center>
                                                <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.RootObject)"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.Center>
                                            <RadialGradientBrush.GradientOrigin>
                                                <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.RootObject)"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(views:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.GradientOrigin>
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>

                        <!-- Content -->
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <!-- MouseOver border -->
                        <Border x:Name="border"
                                BorderBrush="{views:RevealBrush Color=Black,Size=60,Opacity=0.3}"
                                BorderThickness="1">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="root" Property="Background" Value="White"/>
                            <Setter TargetName="root" Property="Opacity" Value="1"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#0077d7"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DigitBtnStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="22" />
    </Style>

    <Style x:Key="OpBtnStyle" TargetType="Button" BasedOn="{StaticResource ButtonBlueStyle}">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>
    
    <Style x:Key="UpperBtnStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>
    
    <Style x:Key="SingleOpBtnStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="21" />
        <Setter Property="FontWeight" Value="ExtraLight" />
        <Setter Property="FontFamily" Value="Calibri" />
    </Style>

</ResourceDictionary>